fn print_field(field) {
    row = 0
    while (row < 9) {
        col = 0
        if (row % 3 == 0) {
            println("+-------+-------+-------+")
        }

        while (col < 9) {
            if (col % 3 == 0) {
                if (col > 0) {
                    print(" ")
                }
                print("|")
            }

            print(" ")
            num = field[row][col]
            if (num == 0) {
                print(" ")
            } else {
                print(num)
            }

            col = col + 1
        }
        println(" |")

        row = row + 1
    }
    println("+-------+-------+-------+")
}

fn solve_field(field) {
    num = 0
    while (num <= 9) {
        if (solve_field_recursive(field, [0, 0], num)) {
            return true
        }

        num = num + 1
    }

    return false
}

fn advance_pos(pos) {
    pos = [pos[0], pos[1]]
    pos[1] = pos[1] + 1
    if (pos[1] >= 9) {
        pos[1] = 0
        pos[0] = pos[0] + 1
    }
    pos
}

fn solve_field_recursive(field, pos, num) {
    tile_free = field[pos[0]][pos[1]] == 0

    if (tile_free) {
        // Check square
        square_row = pos[0] - pos[0] % 3
        square_col = pos[1] - pos[1] % 3
        row = square_row
        while (row < square_row + 3) {
            col = square_col
            while(col < square_col + 3) {
                if (field[row][col] == num) {
                    return false
                }
                col = col + 1
            }
            row = row + 1
        }
        

        // Check row
        row = pos[0]
        col = 0
        while (col < 9) {
            if (field[row][col] == num) {
                return false
            }
            col = col + 1
        }


        // Check column
        row = 0
        col = pos[1]
        while (row < 9) {
            if (field[row][col] == num) {
                return false
            }
            row = row + 1
        }

        field[pos[0]][pos[1]] = num
    }

    next_pos = advance_pos(pos)
    while (
        next_pos[0] < 9
            && next_pos[1] < 9
            && field[next_pos[0]][next_pos[1]] != 0
    ) {
        next_pos = advance_pos(next_pos)
    }

    // No free tile in field, the field is solved
    if (next_pos[0] >= 9 || next_pos[1] >= 9) {
        return true
    }

    next_num = 1
    while (next_num <= 9) {
        if (solve_field_recursive(field, next_pos, next_num)) {
            return true
        }
        next_num = next_num + 1
    }

    // No solution found with this number, so reset the tile if it was free before
    if (tile_free) {
        field[pos[0]][pos[1]] = 0
    }

    return false
}

field_easy = [
    [4, 9, 0, 0, 2, 0, 0, 5, 0],
    [2, 1, 8, 0, 0, 4, 0, 9, 0],
    [0, 0, 0, 0, 6, 0, 0, 8, 4],
    [1, 8, 5, 4, 9, 2, 7, 0, 3],
    [9, 6, 2, 3, 8, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 6, 0, 2, 0],
    [8, 2, 0, 0, 3, 1, 5, 0, 0],
    [5, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 4, 9, 0, 7, 0, 0, 3, 1],
]

field_medium = [
    [0, 8, 7, 0, 0, 0, 5, 0, 0],
    [9, 1, 0, 0, 6, 0, 0, 2, 0],
    [0, 0, 0, 1, 0, 0, 3, 8, 0],
    [4, 7, 9, 0, 0, 0, 0, 0, 1],
    [0, 0, 2, 0, 0, 0, 0, 0, 5],
    [0, 3, 8, 0, 0, 9, 4, 0, 0],
    [0, 0, 5, 0, 0, 6, 0, 7, 8],
    [7, 0, 0, 0, 5, 0, 0, 0, 0],
    [0, 9, 0, 4, 7, 0, 0, 5, 0],
]

field_hard = [
    [0, 0, 0, 9, 0, 2, 0, 8, 7],
    [7, 6, 0, 0, 8, 0, 0, 0, 0],
    [0, 2, 0, 3, 0, 0, 5, 0, 0],
    [0, 0, 0, 0, 0, 0, 8, 0, 3],
    [2, 0, 0, 7, 5, 0, 1, 0, 0],
    [0, 0, 0, 2, 0, 0, 0, 0, 4],
    [0, 0, 0, 5, 0, 0, 9, 4, 0],
    [5, 0, 0, 0, 0, 0, 0, 3, 0],
    [8, 0, 1, 6, 4, 9, 0, 0, 0],
]

field_expert = [
    [0, 0, 0, 0, 0, 6, 9, 8, 0],
    [0, 0, 0, 0, 0, 8, 0, 1, 0],
    [0, 0, 0, 7, 3, 2, 0, 0, 0],
    [8, 0, 0, 0, 5, 0, 0, 0, 0],
    [0, 0, 6, 3, 0, 0, 0, 0, 0],
    [0, 0, 9, 0, 0, 0, 0, 4, 5],
    [7, 2, 0, 0, 0, 0, 0, 0, 8],
    [0, 0, 0, 0, 0, 0, 7, 0, 0],
    [0, 3, 0, 0, 6, 0, 2, 0, 0],
]

field_hellish = [
    [0, 0, 0, 0, 0, 2, 0, 0, 0],
    [0, 0, 4, 0, 0, 0, 0, 9, 0],
    [9, 0, 0, 0, 5, 6, 8, 0, 0],
    [5, 0, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 3, 0, 7, 5, 0, 0, 6],
    [0, 0, 0, 4, 0, 0, 7, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 3],
    [0, 0, 0, 7, 0, 0, 0, 0, 0],
    [4, 0, 0, 0, 8, 9, 6, 0, 0],
]

print_field(field_easy)
solve_field(field_easy)
print_field(field_easy)

print_field(field_medium)
solve_field(field_medium)
print_field(field_medium)

print_field(field_hard)
solve_field(field_hard)
print_field(field_hard)

print_field(field_expert)
solve_field(field_expert)
print_field(field_expert)

print_field(field_hellish)
solve_field(field_hellish)
print_field(field_hellish)
